{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\achag\\\\React Native\\\\VccApp\\\\screens\\\\HomeComponents\\\\CustomModal.js\";\nimport React, { useState } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function (props) {\n  var _useState = useState(props.visible),\n      _useState2 = _slicedToArray(_useState, 2),\n      visibility = _useState2[0],\n      visibilityHandler = _useState2[1];\n\n  return React.createElement(Modal, {\n    visible: visibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, props.name), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, props.location[0], \" / \", props.location[1]));\n}","map":{"version":3,"sources":["C:/Users/achag/React Native/VccApp/screens/HomeComponents/CustomModal.js"],"names":["React","useState","props","visible","visibility","visibilityHandler","name","location"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAGA,eAAe,UAAUC,KAAV,EAAiB;AAAA,kBACYD,QAAQ,CAACC,KAAK,CAACC,OAAP,CADpB;AAAA;AAAA,MACrBC,UADqB;AAAA,MACTC,iBADS;;AAE5B,SACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAED,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,KAAK,CAACI,IAAb,CADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAAP,SAA6BL,KAAK,CAACK,QAAN,CAAe,CAAf,CAA7B,CAFJ,CADJ;AAMH","sourcesContent":["import React, { useState } from 'react'\r\nimport { Modal, Text, TouchableOpacity, View } from 'react-native';\r\n\r\nexport default function (props) {\r\n    const [visibility, visibilityHandler] = useState(props.visible);\r\n    return (\r\n        <Modal visible={visibility}>\r\n            <Text>{props.name}</Text>\r\n            <Text>{props.location[0]} / {props.location[1]}</Text>\r\n        </Modal>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}