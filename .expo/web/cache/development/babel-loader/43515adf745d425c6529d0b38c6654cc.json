{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\achag\\\\React Native\\\\VccApp\\\\screens\\\\HomeComponents\\\\EventCard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nvar EventCard = function (_React$Component) {\n  _inherits(EventCard, _React$Component);\n\n  var _super = _createSuper(EventCard);\n\n  function EventCard(props) {\n    var _this;\n\n    _classCallCheck(this, EventCard);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: props.name,\n      date: props.date,\n      location: props.location,\n      startTime: props.startTime,\n      endTime: props.endTime,\n      description: props.description\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EventCard, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.props.handleClick(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.container,\n        onPress: function onPress() {\n          return _this2.handleClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      }, this.state.name)));\n    }\n  }]);\n\n  return EventCard;\n}(React.Component);\n\nexport { EventCard as default };\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    backgroundColor: 'yellow',\n    borderRadius: 10,\n    marginVertical: 15,\n    paddingVertical: 60,\n    opacity: 0.8\n  },\n  heading: {\n    alignSelf: 'center',\n    paddingHorizontal: '20%',\n    fontSize: 30,\n    fontFamily: 'Raleway-Black',\n    flex: 1,\n    color: 'blue'\n  }\n});","map":{"version":3,"sources":["C:/Users/achag/React Native/VccApp/screens/HomeComponents/EventCard.js"],"names":["React","TouchableOpacity","EventCard","props","state","name","date","location","startTime","endTime","description","handleClick","bind","styles","container","heading","Component","StyleSheet","create","alignItems","justifyContent","flex","backgroundColor","borderRadius","marginVertical","paddingVertical","opacity","alignSelf","paddingHorizontal","fontSize","fontFamily","color"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;;IAGqBC,S;;;;;AACjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAEF,KAAK,CAACE,IADH;AAETC,MAAAA,IAAI,EAAEH,KAAK,CAACG,IAFH;AAGTC,MAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAHP;AAITC,MAAAA,SAAS,EAAEL,KAAK,CAACK,SAJR;AAKTC,MAAAA,OAAO,EAAEN,KAAK,CAACM,OALN;AAMTC,MAAAA,WAAW,EAAEP,KAAK,CAACO;AANV,KAAb;AAQA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAVe;AAWlB;;;;kCACa;AACV,WAAKT,KAAL,CAAWQ,WAAX,CAAuB,IAAvB;AACH;;;6BACQ;AAAA;;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEE,MAAM,CAACC,SAAhC;AAA2C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACH,WAAL,EAAN;AAAA,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKX,KAAL,CAAWC,IAAzC,CADJ,CADJ,CADJ;AAOH;;;;EAxBkCL,KAAK,CAACgB,S;;SAAxBd,S;AA2BrB,IAAMW,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,IAAI,EAAE,CAHC;AAIPC,IAAAA,eAAe,EAAE,QAJV;AAKPC,IAAAA,YAAY,EAAE,EALP;AAMPC,IAAAA,cAAc,EAAE,EANT;AAOPC,IAAAA,eAAe,EAAE,EAPV;AAQPC,IAAAA,OAAO,EAAE;AARF,GADkB;AAW7BX,EAAAA,OAAO,EAAE;AACLY,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,iBAAiB,EAAE,KAFd;AAGLC,IAAAA,QAAQ,EAAE,EAHL;AAILC,IAAAA,UAAU,EAAE,eAJP;AAKLT,IAAAA,IAAI,EAAE,CALD;AAMLU,IAAAA,KAAK,EAAE;AANF;AAXoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { Text, View, StyleSheet } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\n\r\nexport default class EventCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: props.name,\r\n            date: props.date,\r\n            location: props.location,\r\n            startTime: props.startTime,\r\n            endTime: props.endTime,\r\n            description: props.description\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    handleClick() {\r\n        this.props.handleClick(this);\r\n    }\r\n    render() {\r\n        return (\r\n            <View >\r\n                <TouchableOpacity style={styles.container} onPress={() => this.handleClick()}>\r\n                    <Text style={styles.heading}>{this.state.name}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        )\r\n    }\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flex: 1,\r\n        backgroundColor: 'yellow',\r\n        borderRadius: 10,\r\n        marginVertical: 15,\r\n        paddingVertical: 60,\r\n        opacity: 0.8\r\n    },\r\n    heading: {\r\n        alignSelf: 'center',\r\n        paddingHorizontal: '20%',\r\n        fontSize: 30,\r\n        fontFamily: 'Raleway-Black',\r\n        flex: 1,\r\n        color: 'blue'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}